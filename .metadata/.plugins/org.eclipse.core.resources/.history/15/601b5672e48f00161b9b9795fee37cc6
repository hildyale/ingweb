<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


   <context:property-placeholder location="classpath:configuration/properties/connection.properties" />
   
	<!-- CreaciÃ³n del datasource -->
	<bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- especifica propiedades del data source -->
		<!-- Nombre de la clase del driver -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<!-- url de la database -->
		<property name="url" value="${connection.url}"></property>
		<!-- credenciales de sesion -->
		<property name="username" value="${connection.username}"></property>
		<property name="password" value="${connection.password}"></property>
	</bean>
	
	<!-- Creamos el session Factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- toma las propiedades de la clase Localsessionfactory -->
		<property name="dataSource" ref="datasource"></property>
		<property name="mappingResources">
		<list>
			<value>co/edu/udea/iw/mapping/Ciudad.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Cliente.hbm.xml</value>
			<!--  <value>co/edu/udea/iw/mapping/Direccion.hbm.xml</value>-->
			<value>co/edu/udea/iw/mapping/Rol.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Usuario.hbm.xml</value>
		</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hiberante.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- mostrar o no mostrar el comando sql ejecuta en la terminal -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- config si se valida logica de negocio o no -->
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<bean id="CiudadDao" class="co.edu.udea.iw.dao.hibernate.CiudadDaoHibernate">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="UsuarioDao" class="co.edu.udea.iw.dao.hibernate.UsuarioDaoHibernate">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="ClienteDao" class="co.edu.udea.iw.dao.hibernate.ClienteDaoHibernate">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="testUsuario" class="co.edu.udea.logica.testUsuario">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="clienteb1" class="co.edu.udea.logica.ClienteB1impl">
	<constructor-arg name="clienteDao" ref="ClienteDao"></constructor-arg>
	<constructor-arg name="usuarioDao" ref="UsuarioDao"></constructor-arg>
	</bean>

</beans>
